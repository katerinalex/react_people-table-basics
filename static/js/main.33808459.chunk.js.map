{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeoplePage/PeoplePage.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","to","slug","classNames","sex","name","PeoplePage","useState","isPeopleLoadingError","setIsPeopleLoadingError","isNoPeopleMessage","setIsNoPeopleMessage","people","setPeople","isDataLoading","setIsDataLoading","findPerson","personName","find","match","useMatch","useEffect","res","map","pers","motherName","fatherName","mother","father","catch","finally","classnames","params","born","died","Navbar","role","isActive","App","path","index","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.33808459.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink:FC<Props> = ({\n  person,\n}) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport { useMatch } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\nexport const PeoplePage = () => {\n  const [isPeopleLoadingError, setIsPeopleLoadingError] = useState(false);\n  const [isNoPeopleMessage, setIsNoPeopleMessage] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isDataLoading, setIsDataLoading] = useState(false);\n\n  const findPerson = (personName: string | null) => {\n    return people.find(person => person.name === personName);\n  };\n\n  const match = useMatch('/people/:slug');\n\n  useEffect(() => {\n    setIsDataLoading(true);\n    getPeople()\n      .then((res) => {\n        setPeople(res.map(pers => ({\n          ...pers,\n          motherName: pers.motherName || '-',\n          fatherName: pers.fatherName || '-',\n          mother: findPerson(pers.motherName),\n          father: findPerson(pers.fatherName),\n        })));\n\n        if (!res) {\n          setIsNoPeopleMessage(true);\n        }\n      })\n      .catch(() => {\n        setIsPeopleLoadingError(true);\n      })\n      .finally(() => {\n        setIsDataLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"box table-container\">\n        {isDataLoading && <Loader />}\n\n        {isPeopleLoadingError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {isNoPeopleMessage && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {people && (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {people.map(person => (\n                <tr\n                  data-cy=\"person\"\n                  key={person.slug}\n                  className={classnames({\n                    'has-background-warning': (\n                      match?.params.slug === person.slug\n                    ),\n                  })}\n                >\n                  <td>\n                    <PersonLink person={person} />\n                  </td>\n\n                  <td>{person.sex}</td>\n                  <td>{person.born}</td>\n                  <td>{person.died}</td>\n                  <td>\n                    {person.mother\n                      ? <PersonLink person={person.mother} />\n                      : `${person.motherName}`}\n                  </td>\n                  <td>\n                    {person.father\n                      ? <PersonLink person={person.father} />\n                      : `${person.fatherName}`}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={\n              ({ isActive }) => classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )\n            }\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={\n              ({ isActive }) => classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )\n            }\n            to=\"/people\"\n          >\n            People Page\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}